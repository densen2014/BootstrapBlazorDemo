
@code{
    protected override void OnInitialized()
    {
        base.OnInitialized();
        for (int i = 0; i < 10; i++)
        {
            Items2.Add(new Spec { id = i, Name = "name" + i });
        }

        SelectedRows2 = Items2.Take(5).Skip(3);
    }

    //public class Spec
    //{
    //    public int id { get; set; }
    //    public string Name { get; set; }
    //}
}



<Table TItem="Spec"
       IsPagination="true"
       IsStriped="true" IsBordered="true" IsMultipleSelect="true"
       ShowToolbar="true" @bind-SelectedRows="@SelectedRows2"
       ShowDefaultButtons="false" AutoGenerateColumns="true"
       OnQueryAsync="@OnQueryAsync">
</Table>
<Button Text="确定" Icon="fa fa-check-square-o" OnClick="@OnConfirm" />
<p class="mt-3">选中：</p>
<ul class="ul-demo">
    @foreach (var item in SelectedRows2)
    {
        <li>@item.Name</li>
    }
</ul>

@code{
    private List<Spec>? Items2 { get; set; } = new List<Spec>();

    [Parameter] public IEnumerable<Spec> SelectedRows2 { get; set; } = new List<Spec>();
    //private IEnumerable<Spec> SelectedRows2 = new List<Spec>();
    private Task<QueryData<Spec>> OnQueryAsync(QueryPageOptions options)
    {
        // 设置记录总数
        var total = Items2.Count;

        // 内存分页
        var items = Items2.Skip((options.PageIndex - 1) * options.PageItems).Take(options.PageItems).ToList();

        return Task.FromResult(new QueryData<Spec>()
        {
            Items = items,
            TotalCount = total,
            IsSorted = true,
            IsFiltered = true,
            IsSearch = true
        });
    }

    /// <summary>
    /// 选择结果回调方法
    /// </summary>
    [Parameter] public EventCallback<IEnumerable<Spec>> OnConfirms { get; set; }

    private async Task OnConfirm()
    {
        await OnConfirms.InvokeAsync(SelectedRows2);
    }

}
